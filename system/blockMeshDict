/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2412                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

domain
{
    xMin   -70;
    xMax   200;
    yMin   -80; 
    yMax   80;
    zMin     0;
    zMax   30;
    xCells  300;
    yCells  175;
    zCells  30;
}
// All domain
// {
//     xMin   -200;
//     xMax   400;
//     yMin   -400; 
//     yMax   300;
//     zMin     0;
//     zMax   60;
//     xCells  600;
//     yCells  700;
//     zCells  60;
// }

scale   1;

// Note: uses older '.' syntax (to test compatibility)
vertices
(
    ($:domain.xMin $:domain.yMin $:domain.zMin)
    ($:domain.xMax $:domain.yMin $:domain.zMin)
    ($:domain.xMax $:domain.yMax $:domain.zMin)
    ($:domain.xMin $:domain.yMax $:domain.zMin)

    ($:domain.xMin $:domain.yMin $:domain.zMax)
    ($:domain.xMax $:domain.yMin $:domain.zMax)
    ($:domain.xMax $:domain.yMax $:domain.zMax)
    ($:domain.xMin $:domain.yMax $:domain.zMax)
);

blocks
(
    hex (0 1 2 3 4 5 6 7)
    (
        $:domain.xCells
        $:domain.yCells
        $:domain.zCells
    )
    simpleGrading (1 1 1)
);

edges
(
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (0 3 7 4)
        );
    }

    outlet
    {
        type patch;
        faces
        (
            (1 5 6 2)
        );
    }

    ground
    {
        type wall;
        faces
        (
            (0 1 2 3)
        );
    }

    frontAndBack
    {
        type symmetry;
        faces
        (
            (0 4 5 1)
            (3 2 6 7)
            (4 7 6 5)
        );
    }

);

mergePatchPairs
(
);


// Cleanup
#remove ( domain )

// ************************************************************************* //
